<?xml version="1.0"?>
<!-- Sample build file used to retrieve library's sources -->
<project name="unisens-builder" basedir="." default="all">
  
  <!--  all properties are in build.properties --> 
	<property file="build.properties" /> 
	<property file="login.properties" />
  <property name="workingdir" value=".." />

	<!-- path to the library libraries. They are located in builder/lib -->
	<path id="library.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- load the tasks -->
  <taskdef name="xsddoc" classname="net.sf.xframe.xsddoc.Task" classpathref="library.classpath"/>


  <!--all -->
  <target name="all" depends="clean, makeDirs, releaseNumber, build, test, packageJars, copySource, copyDistFiles, javaDoc, xsdDoc, packageRelease" /> 
  <target name="debug" depends="makeDirs, releaseNumber, build, test, packageJars, copySource, copyDistFiles, javaDoc, xsdDoc, packageRelease" /> 


  <!-- make dirs -->
  <target name="makeDirs" >
    <mkdir dir="dist" />
    <mkdir dir="dist/${release.name}" />
    <mkdir dir="dist/${release.name}/src" />
    <mkdir dir="dist/${release.name}/doc" />
  	<mkdir dir="dist/${release.name}/schema-doc" />

    <mkdir dir="checkout" />

    <mkdir dir="build" />
    <mkdir dir="build/unisens-interface" />
    <mkdir dir="build/unisens-library" />
	<mkdir dir="build/unisens-tests" />
	
	<mkdir dir="test" />

  </target>
  
  <!-- clean dirs -->
  <target name="clean" >
    <delete dir="dist" />
    <delete dir="checkout" />
    <delete dir="build" />
	<delete dir="test" />
  </target>           
	
	<!-- create filename and update version and build number in about box -->
	<target name="releaseNumber">
    <!-- git rev-list HEAD | tail -1 ==> 6cfbd13cc210062fb24b90a3111ff56074e43c87 -->
    <!-- git tag -a -m "For calculating build number" build 6cfbd13cc210062fb24b90a3111ff56074e43c87 -->
    <!-- git tag -a 1.5 -m "Version 1.5" -->
    <!-- git push -tags -progress "origin" master:master (use double minus in front of tags and progress) -->
    <!-- Tag is version number. Build number from number of changes on master (1.5.99) -->
    <!-- Read guide here: http://pukkaone.github.io/2010/12/19/build-number-git-repository.html -->
    <exec executable="git" outputproperty="BUILD_NUMBER">
      <arg value="describe"/>
      <arg value="--match"/>
      <arg value="build"/>
      <redirector>
        <outputfilterchain>
          <tokenfilter>
            <replaceregex pattern="^[^-]+-" replace=""/>
            <replaceregex pattern="-.+$" replace=""/>
          </tokenfilter>
       </outputfilterchain>
     </redirector>
    </exec>
    <exec executable="git" outputproperty="VERSION_NUMBER">
      <arg value="describe"/>
      <redirector>
        <outputfilterchain>
          <tokenfilter>
            <replaceregex pattern="-.+$" replace=""/>
          </tokenfilter>
       </outputfilterchain>
     </redirector>
    </exec>
    <echo>Current version is ${VERSION_NUMBER}.${BUILD_NUMBER}</echo>

		<tstamp><format property="timestamp" pattern="dd.MM.yyyy HH:MM z"/></tstamp>
		
		<property name="release.date" value="${timestamp}" />
		<property name="release.filename" value="${release.name}-${VERSION_NUMBER}.${BUILD_NUMBER}" />
		
		<replace file="${workingdir}/unisens-library/src/META-INF/MANIFEST.MF" token="${implemenation-version}" value="${VERSION_NUMBER} Rev. ${BUILD_NUMBER}" />
		<replace file="${workingdir}/unisens-interface/src/META-INF/MANIFEST.MF" token="${specification-version}" value="${VERSION_NUMBER} Rev. ${BUILD_NUMBER}" />
	</target>
	
  <!-- build interface and unisens-library-->
  <target name="build">
    <javac destdir="build/unisens-interface" srcdir="${workingdir}/unisens-interface/src" source="1.6" target="1.6" />
    <javac destdir="build/unisens-library" srcdir="${workingdir}/unisens-library/src" classpath="build/unisens-interface" source="1.6" target="1.6"/>
	<javac destdir="build/unisens-tests" srcdir="${workingdir}/unisens-tests" debug="true" source="1.6" target="1.6">
		<classpath>
			<path refid="library.classpath"/>
			<pathelement path="build/unisens-interface"/>
			<pathelement path="build/unisens-library"/>
		</classpath>
	</javac>
  </target>
  
  <!-- make jar files -->
  <target name="packageJars">
 	<jar destfile="dist/${release.name}/org.unisens.jar"  manifest="${workingdir}/unisens-interface/src/META-INF/MANIFEST.MF">
      <fileset dir="build/unisens-interface"/>
      <fileset dir="${workingdir}/unisens-interface/src/" includes="unisens.xsd"/>
    </jar>
    <jar destfile="dist/${release.name}/org.unisens.ri.jar" manifest="${workingdir}/unisens-library/src/META-INF/MANIFEST.MF">
      <fileset dir="build/unisens-library"/>
      <fileset dir="${workingdir}/unisens-library/src" includes="config/*" />
    </jar>
  </target>


  <!-- run junit tests -->
  <target name="test" depends="build" description="runs all JUnit tests">
    <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <junit printsummary="yes" failureProperty="test.failed" fork="true" dir="${workingdir}/" showoutput="true">
		<classpath>
			<path refid="library.classpath"/>
			<pathelement path="build/unisens-interface"/>
			<pathelement path="build/unisens-library"/>
			<pathelement path="${workingdir}/unisens-library/src"/>
			<pathelement path="build/unisens-tests"/>
		</classpath>
		<batchtest todir="test" fork="true">
			<fileset dir="build/unisens-tests"><include name="**/*Test.class"/></fileset>
			<formatter type="xml"/>
		</batchtest>
    </junit>
	
	<junitreport tofile="TESTS-TestSuites.xml" todir="test">
            <fileset dir="test">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="test"/>
        </junitreport>

	<fail message="Tests failed. Check log and/or reports." if="test.failed"/>
  </target>
  

  <!-- copy source to dist dirs -->
  <target name="copySource">
    <copy todir="dist/${release.name}/src">
      <fileset dir="${workingdir}/unisens-interface/src" />
    </copy>
    <copy todir="dist/${release.name}/src" >
      <fileset dir="${workingdir}/unisens-library/src" />
    </copy>
  </target>

  <!--copy additional distfiles and documentation to dist dir -->
  <target name="copyDistFiles" >
    <copy todir="dist/${release.name}" >
      <fileset dir="${workingdir}/distfiles" />
    </copy>
    <copy file="${workingdir}/documentation/user-manual/Unisens-Dokumentation.pdf" todir="dist/${release.name}/doc" />
  </target>

  <!-- make javadoc -->
  <target name="javaDoc" >
    <javadoc sourcepath="${workingdir}/unisens-interface/src" destdir="dist/${release.name}/doc" />
  </target>
	
  <!-- make xsddoc -->
	<target name="xsdDoc">
		<xsddoc out="dist/${release.name}/schema-doc" doctitle="Unisens - a universal data format " verbose="true">
			<fileset dir="${workingdir}/unisens-interface/src" includes="*.xsd"/>
		</xsddoc>
	</target>

  <!-- make zip from dist -->
  <target name="packageRelease">
    <zip destfile="${release.filename}.zip" basedir="dist" />
  </target>
  
</project>
